---
alwaysApply: true
description: Handle ambiguous user requests by asking one clarifying question at a time
---

# Ambiguity Handling & Clarification Policy

When a user request can be interpreted in multiple ways, do NOT assume defaults. Detect ambiguity and ask exactly one clarifying question at a time before proceeding.

## Policy
- If the request is ambiguous or could be implemented in multiple ways, ask ONE clarifying question.
- Queue additional questions and ask them only after the previous one is resolved.
- If the request is clear and straightforward, proceed without clarification.
- Never silently choose defaults that change behavior or architecture.

## Examples
- "Create a new process" → ambiguous. Do not assume a starting point. Ask: "Which type of process should we start with: automated, manual, or scheduled?"
- "Set up email integration" → ambiguous. Ask: "Do you want to send email, read inbox, or watch for new messages?"
- "Optimize performance" → ambiguous. Ask: "Is the bottleneck latency, failures, or resource usage?"

## Communication Alignment
- Present clarification options without overwhelming the user
- Offer specific choices when possible rather than open-ended questions
- Allow the user to choose their preferred level of detail
- Keep the conversation focused and avoid tangents

## What NOT to do:
- Assume defaults without asking
- Ask multiple questions simultaneously
- Block user workflow for clarification