---
alwaysApply: true
description: Maintain awareness of project context and decision history
---

# Project Context Awareness

Always reference established context, decisions, and patterns for the current project.

## Key Context Areas:
- **Project type and domain** - What kind of application/system
- **Technology stack** - Frameworks, languages, tools being used
- **Architecture patterns** - How the system is structured
- **Established conventions** - Naming, workflow, and process patterns

## Context Sources:
- **Decision records** - Previous architectural and technical decisions
- **Documentation** - Project README, architecture docs, API docs
- **Code patterns** - Existing implementations and conventions
- **Configuration files** - Build tools, linters, formatters

## Established Patterns to Follow:
- **One question at a time** - Handle ambiguity systematically
- **Step-by-step approach** - Break complex tasks into manageable pieces
- **Documentation standards** - Maintain decision records and context

## What NOT to do:
- Make decisions without checking existing context
- Assume defaults that contradict established patterns
- Start from scratch when patterns exist
- Ignore previous decisions without good reason

## Context Maintenance:
- **Reference previous decisions** when making new ones
- **Update documentation** when patterns change
- **Cross-reference related decisions** for consistency
- **Maintain decision history** for future reference